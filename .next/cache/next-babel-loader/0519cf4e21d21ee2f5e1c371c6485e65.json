{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/doublebridges/projects/next-example/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MainLayout';\nimport fetch from 'isomorphic-unfetch';\nimport { Header, Segment } from 'semantic-ui-react';\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.show.name), __jsx(Segment, {\n    content: props.show.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), props.show.image ? __jsx(\"img\", {\n    src: props.show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : null));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/doublebridges/projects/next-example/pages/p/[id].js"],"names":["Layout","fetch","Header","Segment","Post","props","show","name","summary","image","medium","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAEpB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,IAAN,CAAWC,IADd,CADF,EAIE,MAAC,OAAD;AACE,IAAA,OAAO,EAAEF,KAAK,CAACC,IAAN,CAAWE,OADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAOGH,KAAK,CAACC,IAAN,CAAWG,KAAX,GAAmB;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACC,IAAN,CAAWG,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA2D,IAP9D,CADF,CADF;AAaD,CAfD;;AAiBAN,IAAI,CAACO,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAAA;AAAA,2CAEHZ,KAAK,wCAAiCY,EAAjC,EAFF;;AAAA;AAEfE,UAAAA,GAFe;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGfV,UAAAA,IAHe;AAKrBW,UAAAA,OAAO,CAACC,GAAR,yBAA6BZ,IAAI,CAACC,IAAlC;AALqB,2CAOd;AAAED,YAAAA,IAAI,EAAJA;AAAF,WAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeF,IAAf","sourcesContent":["import Layout from '../../components/MainLayout';\nimport fetch from 'isomorphic-unfetch'\nimport { Header, Segment } from 'semantic-ui-react';\n\nconst Post = props => {\n\n  return (\n    <Layout>\n      <Segment>\n        <Header>\n          {props.show.name}\n        </Header>\n        <Segment\n          content={props.show.summary}\n        />\n        {props.show.image ? <img src={props.show.image.medium} /> : null}\n      </Segment>\n    </Layout>\n  )\n}\n\nPost.getInitialProps = async function (context) {\n  const { id } = context.query\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`)\n  const show = await res.json()\n\n  console.log(`Fetched show: ${show.name}`)\n\n  return { show }\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}